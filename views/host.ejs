<!DOCTYPE html>
<html>
  <head>
    <title><%= title %></title>
    <link rel='stylesheet' href='/stylesheets/style.css' />
  </head>
  <body>

		<progress id="sendProgress" max="0" value="0"></progress>
    <video src="" autoplay></video>

    <script src="javascripts/socket.io.js"></script>
    <script src="javascripts/jrtc.bundle.js"></script>

    <script>

    const {desktopCapturer, screen} =  require('electron');
    const robot = require("robotjs");
    robot.setMouseDelay(1);
    robot.setKeyboardDelay(1);

    let screenSize = screen.getPrimaryDisplay().size;

    let socketUrl = 'https://superlucky.co.kr:12341';
    //let socketUrl = 'http://localhost:12341';

    let receiver = {};
    let sender = new Jrtc(
        'sender',
        'all',
        io.connect(socketUrl),
        document.querySelector('video')
    );


    desktopCapturer.getSources({types: ['window', 'screen']}, (error, sources) => {
      if (error) throw error
      for (let i = 0; i < sources.length; ++i) {
        console.log('NAME---',sources[i]);

        if (sources[i].id.match(/^screen:/)) {
        //if (sources[i].id.match(/^screen:0:0/)) {

          console.log('NAME---',sources[i].thumbnail.getSize());


          navigator.webkitGetUserMedia({
            audio: false,
            video: {
              mandatory: {
                chromeMediaSource: 'desktop',
                chromeMediaSourceId: sources[i].id,
                minWidth: screenSize.width,
                maxWidth: screenSize.width,
                minHeight: screenSize.height,
                maxHeight: screenSize.height
              }
            }
            }, function(stream) {
              sender.setEvent(stream);

              sender.receiveCreateRtc = function(id, roomname) {

                receiver[id] = new Jrtc( 'receiver', 'data', io.connect(socketUrl));


                // join 을 하면 센더에서 크레이트 피어를 합니다.
                receiver[id].join(roomname);

                let mouseDown = false;

                receiver[id].onReceiveMessageCallback = function(event) {
                  let data = JSON.parse(event.data);

                  console.log("va-",data);

                  if (data.topic == 'KeyMouseCtrl:KeyEvent') {
                    robot.keyToggle(String.fromCharCode(data.key), (data.down==1)?'down':'up');
                  }


                  if (data.topic == 'KeyMouseCtrl:MouseEvent') {
                    robot.moveMouse(data.x, data.y);

                    if (!mouseDown && data.buttonMask == 1) {
                      robot.mouseToggle("down");
                      mouseDown = true;
                    }

                    if (mouseDown) {
                      robot.dragMouse(data.x,data.y);
                    }

                    if (mouseDown && data.buttonMask == 0) {
                      mouseDown = false;
                    }

                    if (data.buttonMask == 0)  {
                      robot.mouseToggle("up");
                    }
                  }

                }
              }

              sender.join('mainroom', function(receveirIds) {
                receveirIds.forEach(function(id) {
                  sender.createPeer(id);
                  sender.createOffer(id);
                });
              });

            }, handleError)
          return
        }
      }
    })



    function handleError (e) {
      console.log(e)
    }

    </script>
  </body>
</html>
